<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">
       <context:component-scan base-package="com.xiongyingqi.controller"></context:component-scan>

       <!-- 启动mvc对aop的支持,使用aspectj代理 -->
       <aop:aspectj-autoproxy proxy-target-class="true"/>


       <!-- 以下 validator  ConversionService 在使用 mvc:annotation-driven 会 自动注册-->
       <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
              <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
       </bean>

       <!--<bean class="com.kingray.spring.http.convert.DateConverter"></bean>-->

       <!-- 类型转换及数据格式化 -->
       <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
              <property name="converters">
                     <set>
                            <bean class="com.xiongyingqi.spring.http.convert.SqlDateConverter"/>
                            <bean class="com.xiongyingqi.spring.http.convert.UtilDateConverter"/>
                     </set>
              </property>
       </bean>

       <!--<bean
               class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
           <property name="cacheSeconds" value="0"/>
           &lt;!&ndash;日期格式转换 &ndash;&gt;
           <property name="webBindingInitializer">
               <bean class="com.kingray.spring.http.convert.DateConverter"/>
           </property>
           <property name="messageConverters">
               <list>
                   <bean
                           class="com.kingray.spring.http.convert.json.Jackson2HttpMessageConverter">
                   </bean>
                   <bean
                           class="com.kingray.spring.http.convert.json.JacksonHttpMessageConverter">
                   </bean>
                   <bean
                           class="org.springframework.http.converter.BufferedImageHttpMessageConverter">
                   </bean>
                   <bean
                           class="org.springframework.http.converter.ResourceHttpMessageConverter">
                   </bean>
                   <bean class="org.springframework.http.converter.FormHttpMessageConverter">
                   </bean>
                   <bean
                           class="org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter">
                   </bean>
                   <bean
                           class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter">
                   </bean>
                   <bean
                           class="org.springframework.http.converter.feed.AtomFeedHttpMessageConverter">
                   </bean>
                   <bean
                           class="org.springframework.http.converter.feed.RssChannelHttpMessageConverter">
                   </bean>
                   <bean
                           class="org.springframework.http.converter.xml.Jaxb2CollectionHttpMessageConverter">
                   </bean>
                   <bean
                           class="org.springframework.http.converter.xml.SourceHttpMessageConverter">
                   </bean>
                   <bean
                           class="org.springframework.http.converter.ByteArrayHttpMessageConverter">
                   </bean>
               </list>
           </property>
           <property name="customArgumentResolvers">
               <list>
                   <bean
                           class="com.kingray.spring.mvc.method.annotation.RequestJsonParamMethodArgumentResolver"/>
                   <bean
                           class="com.kingray.spring.mvc.method.annotation.FormModelMethodArgumentResolver"/>
               </list>
           </property>
       </bean>-->

       <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 3.2之后舍弃 <mvc:annotation-driven /><mvc:annotation-driven
           validator="validator" conversion-service="conversionService" /> -->
       <!-- <bean class="org.springframework.http.converter.StringHttpMessageConverter">
           <property name="supportedMediaTypes"> <list> <value>text/plain;charset=UTF-8</value>
           <value>text/html;charset=UTF-8</value> </list> </property> </bean> <bean
           class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
           <property name="supportedMediaTypes"> <list> <value>application/json; charset=UTF-8</value>
           <value>application/x-www-form-urlencoded; charset=UTF-8</value> </list> </property>
           </bean> -->
       <!-- 日期转换 必须放在<mvc:annotation-driven />前面 -->
    <mvc:annotation-driven validator="validator" conversion-service="conversionService"
                           content-negotiation-manager="contentNegotiationManager">
        <!-- 加入org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter配置之后这里就舍弃-->
        <mvc:message-converters register-defaults="true">
            <bean class="com.xiongyingqi.spring.http.convert.json.Jackson2HttpMessageConverter">
            </bean>
        </mvc:message-converters>
        <mvc:argument-resolvers>
            <bean
                    class="com.xiongyingqi.spring.mvc.method.annotation.RequestJsonParamMethodArgumentResolver"/>
            <bean
                    class="com.xiongyingqi.spring.mvc.method.annotation.FormModelMethodArgumentResolver"/>
        </mvc:argument-resolvers>
    </mvc:annotation-driven>

       <!--拦截器配置 -->
       <!--<mvc:interceptors>-->
              <!--<mvc:interceptor>-->
                     <!--<mvc:mapping path="/**"/>-->
                     <!--<ref bean="webContextInterceptor"/>-->
              <!--</mvc:interceptor>-->
              <!--<mvc:interceptor>-->
                     <!--<mvc:mapping path="/**"/>-->
                     <!--<ref bean="cookieInterceptor"/>-->
              <!--</mvc:interceptor>-->
       <!--</mvc:interceptors>-->

       <!-- 内容协商管理器  -->
       <!--1、首先检查路径扩展名（如my.pdf）；2、其次检查Parameter（如my?format=pdf）；3、检查Accept Header-->
       <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
              <!-- 关闭扩展名至mimeType的映射, 即 /user.json => application/json -->
              <property name="favorPathExtension" value="false"/>
              <!-- 关闭 /userinfo/123?format=json 的支持 -->
              <property name="favorParameter" value="false"/>
              <property name="parameterName" value="format"/>
              <!-- 是否忽略Accept Header -->
              <property name="ignoreAcceptHeader" value="true"/>

              <property name="mediaTypes"> <!--扩展名到MIME的映射；favorPathExtension, favorParameter是true时起作用  -->
                     <value>
                            json=application/json
                            xml=application/xml
                            html=text/html
                            *=*/*
                     </value>
              </property>
              <!-- 默认的content type -->
              <!--<property name="defaultContentType" value="text/html"/>-->
              <property name="defaultContentType" value="application/json"/>
       </bean>

       <!-- ========================= VIEW定义 ========================= -->
       <!-- 内容协商视图解析器；根据客户端的不同的请求决定不同的 view进行响应, 如 /blog/1.json /blog/1.xml -->
       <!-- 会自动根据解析的contentType来决定使用哪个视图解析器（默认使用整个web应用中的viewResolver） -->
       <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver" p:order="0">
              <!-- 内容协商管理器 用于决定media type -->
              <property name="contentNegotiationManager" ref="contentNegotiationManager"/>
              <!-- 默认视图 放在解析链最后 -->
              <property name="defaultViews">
                     <list>
                            <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
                            </bean>
                            <!--<bean class="com.alibaba.fastjson.support.spring.FastJsonJsonView" />-->
                            <!--<bean class="org.springframework.web.servlet.view.xml.MarshallingView"/>-->
                     </list>
              </property>
       </bean>

</beans>
